/*
 * Copyright 2023 the original author or authors.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * https://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.cuioss.test.generator.impl;

import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import de.cuioss.test.generator.TypedGenerator;
import de.cuioss.test.generator.internal.net.java.quickcheck.generator.PrimitiveGenerators;

/**
 * This Class is used to generate a Float Object value which is generated by
 * next() method.
 *
 */
@AllArgsConstructor
@NoArgsConstructor
public class FloatObjectGenerator implements TypedGenerator<Float> {

    private float low = Float.MIN_VALUE;
    private float high = Float.MAX_VALUE;

    @Override
    public Float next() {
        return PrimitiveGenerators.doubles(low, high).next().floatValue();
    }

    @Override
    public Class<Float> getType() {
        return Float.class;
    }

}
